---
# Copyright: (c) 2022, XLAB Steampunk <steampunk@xlab.si>
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- import_role:
    name: check_rhel_subscription

- name: Install Packages
  ansible.builtin.dnf:
    state: latest
    name:
      - fdo-admin-cli
      - fdo-owner-onboarding-server
      - firewalld
      - sshpass
      - rsync

- name: Creates FDO Keys Directory
  file:
    path: "{{ fdo_src }}/keys"
    state: directory
    mode: 0775

- name: Copy Device Certificates from Manufacturing Server
  synchronize:
    src: "{{ manufacturing_server_fdo_src }}/keys/device_ca_cert.pem"
    dest: "{{ fdo_src }}/keys/device_ca_cert.pem"
    checksum: true
    rsync_timeout: 60
  delegate_to: "{{ manufacturing_server_url }}"
  when: copy_manufacturer_certs | bool == true

- name: Copy Owner Key from Manufacturing Server
  synchronize:
    src: "{{ manufacturing_server_fdo_src }}/keys/owner_key.der"
    dest: "{{ fdo_src }}/keys/owner_key.der"
    checksum: true
    rsync_timeout: 60
  delegate_to: "{{ manufacturing_server_url }}"
  when: copy_manufacturer_certs | bool == true

- name: Copy Owner Certificate from Manufacturing Server
  synchronize:
    src: "{{ manufacturing_server_fdo_src }}/keys/owner_cert.pem"
    dest: "{{ fdo_src }}/keys/owner_cert.pem"
    checksum: true
    rsync_timeout: 60
  delegate_to: "{{ manufacturing_server_url }}"
  when: copy_manufacturer_certs | bool == true

- name: Create Owner Service Keys Stores
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
    recurse: yes
  loop:
    - "{{ fdo_src }}/stores/owner_vouchers"
    - "{{ fdo_src }}/stores/owner_onboarding_sessions"

- name: Copy Owner Onboarding Server Config
  copy:
    src: /usr/share/doc/fdo/owner-onboarding-server.yml
    dest: "{{ fdo_src }}/owner-onboarding-server.yml"
    remote_src: yes

- name: Copy ServiceInfo API Server Config
  copy:
    src: /usr/share/doc/fdo/serviceinfo-api-server.yml
    dest: "{{ fdo_src }}/serviceinfo-api-server.yml"
    remote_src: yes

- name: Start and Enable FDO Onboarding Server Service
  systemd:
    name: fdo-owner-onboarding-server
    state: started
    enabled: yes

- name: Start and Enable FDO ServiceInfo API Server Service
  systemd:
    name: fdo-serviceinfo-api-server
    state: started
    enabled: yes

- name: Start firewalld service 
  service:
    name: firewalld
    state: started

- name: Open Required Ports
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: true
  loop:
    - 8081/tcp
    - 8083/tcp
